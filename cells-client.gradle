plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    // Generate helper classes to pass data between fragments
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    // Should replace main "package" attribute of the AndroidManifest.xml
    // that is deprecated and throws a WARNING but it still does not work.
    //namespace 'com.pydio.android.cells'

    compileSdkVersion ownVersions['android.sdk.compile'] as int
    buildToolsVersion ownVersions['android.build.tools']

    // Gather overrides in a distinct folder for easier maintenance
    sourceSets.main.res.srcDir 'src/main/res-overrides'

    defaultConfig {

        applicationId "com.pydio.android.Client"

        versionCode ownVersions['cells-app.code'] as int
        versionName ownVersions['cells-app.name']

        minSdkVersion ownVersions['android.sdk.min'] as int
        targetSdkVersion ownVersions['android.sdk.target'] as int

        consumerProguardFiles 'consumer-rules.pro'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            storeFile file(configs['keystore.path'])
            storePassword configs['keystore.pwd']
            keyAlias configs['signkey.alias']
            keyPassword configs['signkey.pwd']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            resValue "string", "app_version",
                    "${defaultConfig.versionName}"
            minifyEnabled false
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // versionName ownVersions['sdk-android.version.dev']
            // versionName = ownVersions['sdk-android.future.name']
            versionNameSuffix = '-dev'
            resValue "string", "app_version",
                    "${defaultConfig.versionName}${versionNameSuffix}"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

// FIXME
//    sourceSets {
//        all {
//            languageSettings {
//                optIn('kotlin.time.ExperimentalTime')
//            }
//        }
//    }

    // We do not want that the linter makes builds fail. It is quite extremist by default.
    lintOptions {
        abortOnError false
    }

    buildFeatures {
        dataBinding = true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    if (useLocalSdkJava) {
        api project(":sdk-java")
        println "[DEBUG] Using local java SDK"
    } else {
        println "[WARNING] **Not** using local SDK "
        api "com.pydio.cells:cells-sdk-java:${ownVersions['java.sdk']}"
        println "[DEBUG] Retrieve java sdk from maven repo"
    }

    // dependencies are defined in root build.gradle file
    implementation libraries
    kapt librariesKapt

    implementation platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeLibraries

    // TODO clean the way we handle these additional dependencies
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'androidx.compose.material3:material3-window-size-class:1.0.1'
    implementation 'io.insert-koin:koin-androidx-compose:3.4.2'
    implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.1'

    // Enable custom data loader for glide library (display images)
    annotationProcessor processors

    testImplementation testLibraries
    androidTestImplementation androidTestLibraries
}
