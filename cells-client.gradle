plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {

    namespace 'com.pydio.android.cells'

    compileSdk ownVersions['android.sdk.compile'] as int
//     buildToolsVersion ownVersions['android.build.tools']

    // Gather overrides in a distinct folder for easier maintenance
    sourceSets.main.res.srcDir 'src/main/res-overrides'

    defaultConfig {

        // Main legacy App ID
        applicationId "com.pydio.android.Client"
        // Test ID to be able to have the next app along with the production one on a single device
        // applicationId "com.pydio.android.cells.next"

        versionCode ownVersions['cells-app.code'] as int
        versionName ownVersions['cells-app.name']

        minSdkVersion ownVersions['android.sdk.min'] as int
        targetSdkVersion ownVersions['android.sdk.target'] as int

        consumerProguardFiles 'consumer-rules.pro'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            storeFile file(configs['keystore.path'])
            storePassword configs['keystore.pwd']
            keyAlias configs['signkey.alias']
            keyPassword configs['signkey.pwd']
        }
    }

    buildTypes {

        release {
            signingConfig signingConfigs.release
            resValue "string", "app_version",
                    "${defaultConfig.versionName}"

            minifyEnabled true
            // If you haven't already built your app using minifyEnabled for code shrinking,
            // then try that before enabling shrinkResources, because you might need to edit your proguard-rules.pro file
            // to keep classes or methods that are created or invoked dynamically before you start removing resources.
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // See https://developer.android.com/build/shrink-code#android_gradle_plugin_version_41_or_later
            // And you must have this installed in Android Studio https://developer.android.com/studio/projects/install-ndk
            // to also generate and upload the file that enable understanding stack traces seen in production
            // The generated mapping.txt file can than be uploaded on the store followin this:
            // https://support.google.com/googleplay/android-developer/answer/9848633#upload_file&zippy=%2Cupload-files-using-play-console
            ndk {
                debugSymbolLevel 'FULL'
            }
        }

        debug {
            // versionName ownVersions['sdk-android.version.dev']
            // versionName = ownVersions['sdk-android.future.name']
            versionNameSuffix = '-dev'
            resValue "string", "app_version",
                    "${defaultConfig.versionName}${versionNameSuffix}"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    // We do not want that the linter makes builds fail. It is quite extremist by default.
    lintOptions {
        abortOnError false
    }
}

dependencies {

    if (useLocalSdkJava) {
        api project(":sdk-java")
        println "[DEBUG] Using local java SDK"
    } else {
        println "[WARNING] **Not** using local SDK "
        api "com.pydio.cells:cells-sdk-java:${ownVersions['java.sdk']}"
        println "[DEBUG] Retrieve java sdk from maven repo"
    }

    implementation platform('androidx.compose:compose-bom:2023.10.00')
    implementation platform('io.insert-koin:koin-bom:3.5.1')

    // dependencies are defined in root build.gradle file
    implementation libraries
    implementation composeLibraries
    kapt librariesKapt

    // Tmp addition
    implementation "androidx.palette:palette-ktx:1.0.0"
    // To enable legacy preferences migration
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // override default platform version
    // e.G    implementation "androidx.compose.material3:material3:1.2.0-alpha1"

    // Enable custom data loader for glide library (display images)
    annotationProcessor processors

    testImplementation platform('io.insert-koin:koin-bom:3.5.1')
    androidTestImplementation platform('io.insert-koin:koin-bom:3.5.1')
    testImplementation testLibraries
    androidTestImplementation androidTestLibraries
}
